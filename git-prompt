        RED="\[\033[0;31m\]"
     YELLOW="\[\033[0;33m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[0;34m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
 COLOR_NONE="\[\e[0m\]"

function parse_git_branch {
  git_status="$(git status 2> /dev/null)"
  if [ -x git_status ]; then exit; fi
  git_stash="$(git stash list 2> /dev/null)"
  branch_pattern="^On branch ([^${IFS}]*)"
  remote_pattern="Your branch is (.*) of"
  diverge_pattern="Your branch and (.*) have diverged"
  if [[ ! ${git_status} =~ "working directory clean" ]]; then
    state="${RED}★ "
  fi
  if [[ -n ${git_stash} ]]; then
      stash="${YELLOW}⌇ ${COLOR_NONE}"$(git stash list | wc -l | tr -d ' ')" "
  fi
  # add an else if or two here if you want to get more specific
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      remote="${YELLOW}↑"
    else
      remote="${YELLOW}↓"
    fi
  fi
  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="${YELLOW}↕"
  fi
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch="${YELLOW}⎇ ${COLOR_NONE}"${BASH_REMATCH[1]}" "
    echo " ${GREEN}(${WHITE}${branch}${stash}${state}${remote}${GREEN})"
  fi
}

MYPSDIR_AWK=$(cat << 'EOF'
BEGIN { FS = OFS = "/" }
{ 
   if (length($0) > 16 && NF > 4)
      print $1,$2,".." NF-4 "..",$(NF-1),$NF
   else
      print $0
}
EOF
)

export MYPSDIR='$(echo -n "${PWD/#$HOME/~}" | awk "$MYPSDIR_AWK")'

function git_prompt_func() {
    previous_return_value=$?;
    dir=$(eval "echo ${MYPSDIR}")
    prompt="${TITLEBAR}${GREEN}${dir}$(parse_git_branch)${COLOR_NONE} "
    if test $previous_return_value -eq 0
    then
        PS1="${prompt}→ "
    else
        PS1="${prompt}${RED}→${COLOR_NONE} "
    fi
}
 
